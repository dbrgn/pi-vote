<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PiVoteClient" xml:space="preserve">
    <value>Pi-Vote Client</value>
  </data>
  <data name="EncryptPrivateKeyCertificateId" xml:space="preserve">
    <value>Certificate Id:</value>
  </data>
  <data name="EncryptPrivateKeyCertificateType" xml:space="preserve">
    <value>Certificate Type:</value>
  </data>
  <data name="EncryptPrivateKeyChoose" xml:space="preserve">
    <value>Encrypt my private key</value>
  </data>
  <data name="EncryptPrivateKeyEncrypted" xml:space="preserve">
    <value>Your private key is encrypted. You need to enter your passphrase to decrypt it.</value>
  </data>
  <data name="EncryptPrivateKeyInfo" xml:space="preserve">
    <value>You may encrypt the private key of your certificate to proctet it against unauthorized use. If you do so you will be prompted to enter your passphrase when your private key is used.</value>
  </data>
  <data name="EncryptPrivateKeyPassphrase" xml:space="preserve">
    <value>Passphrase:</value>
  </data>
  <data name="EncryptPrivateKeyRepeat" xml:space="preserve">
    <value>Repeat passphrase:</value>
  </data>
  <data name="EncryptPrivateKeyTitle" xml:space="preserve">
    <value>Pi-Vote Private Key Protection</value>
  </data>
  <data name="EncryptPrivateKeyUnlockAction" xml:space="preserve">
    <value>Action:</value>
  </data>
  <data name="EncryptPrivateKeyWrongPassphrase" xml:space="preserve">
    <value>Passphrase is wrong.</value>
  </data>
  <data name="ChangePassphraseMessageChange" xml:space="preserve">
    <value>Enter old and now passphrase to change it.</value>
  </data>
  <data name="ChangePassphraseMessageWrong" xml:space="preserve">
    <value>Old passphrase is wrong.</value>
  </data>
  <data name="ChangePassphraseNewPassphrase" xml:space="preserve">
    <value>New Passphrase:</value>
  </data>
  <data name="ChangePassphraseOldPassphrase" xml:space="preserve">
    <value>Old Passphrase:</value>
  </data>
  <data name="MessageBoxTitle" xml:space="preserve">
    <value>Pi-Vote</value>
  </data>
  <data name="UnlockActionAuthorityCheckShares" xml:space="preserve">
    <value>Decrypt key shares and sign share response</value>
  </data>
  <data name="UnlockActionAuthorityCreateShares" xml:space="preserve">
    <value>Sign newly created key shares</value>
  </data>
  <data name="UnlockActionAuthorityDecipher" xml:space="preserve">
    <value>Sign partial deciphers.</value>
  </data>
  <data name="UnlockActionCreateVoting" xml:space="preserve">
    <value>Sign voting parameters</value>
  </data>
  <data name="UnlockActionVote" xml:space="preserve">
    <value>Sign vote</value>
  </data>
  <data name="ButtonAbort" xml:space="preserve">
    <value>&amp;Abort</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="ButtonIgnore" xml:space="preserve">
    <value>&amp;Ignore</value>
  </data>
  <data name="ButtonNo" xml:space="preserve">
    <value>&amp;No</value>
  </data>
  <data name="ButtonOk" xml:space="preserve">
    <value>&amp;OK</value>
  </data>
  <data name="ButtonRetry" xml:space="preserve">
    <value>&amp;Retry</value>
  </data>
  <data name="ButtonYes" xml:space="preserve">
    <value>&amp;Yes</value>
  </data>
  <data name="UnlockActionSignRequest" xml:space="preserve">
    <value>Sign your certificate request.</value>
  </data>
  <data name="AskForPartiallyDecipher" xml:space="preserve">
    <value>There are {0} valid ballots. If this number seems too low, there could be a security problem. Do not decipher the result and contact the other authorities and administrators in this case. Proceed with deciphering?</value>
  </data>
  <data name="ButtonDone" xml:space="preserve">
    <value>&amp;Done</value>
  </data>
  <data name="ButtonNext" xml:space="preserve">
    <value>&amp;Next</value>
  </data>
  <data name="ButtonPrevious" xml:space="preserve">
    <value>&amp;Previous</value>
  </data>
  <data name="ContextMenuAdd" xml:space="preserve">
    <value>&amp;Add...</value>
  </data>
  <data name="ContextMenuEdit" xml:space="preserve">
    <value>&amp;Edit...</value>
  </data>
  <data name="ContextMenuRemove" xml:space="preserve">
    <value>&amp;Remove</value>
  </data>
  <data name="ButtonClose" xml:space="preserve">
    <value>&amp;Close</value>
  </data>
  <data name="UnlockActionDelete" xml:space="preserve">
    <value>Sign command to delete voting</value>
  </data>
  <data name="CertificateFormCloseButton" xml:space="preserve">
    <value>&amp;Close</value>
  </data>
  <data name="CertificateFormTitle" xml:space="preserve">
    <value>View Certificate</value>
  </data>
  <data name="CertificateId" xml:space="preserve">
    <value>Id:</value>
  </data>
  <data name="CertificateInvalid" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="CertificateName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="CertificateSignatureId" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="CertificateSignatureInvalid" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="CertificateSignatureName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="CertificateSignatures" xml:space="preserve">
    <value>Signatures:</value>
  </data>
  <data name="CertificateSignatureStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="CertificateSignatureUnknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="CertificateSignatureValid" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="CertificateSignatureValidFrom" xml:space="preserve">
    <value>Valid From</value>
  </data>
  <data name="CertificateSignatureValidUntil" xml:space="preserve">
    <value>Valid Until</value>
  </data>
  <data name="CertificateType" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="CertificateValid" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="CertificateCreationDate" xml:space="preserve">
    <value>Creation Date:</value>
  </data>
  <data name="CertificateDetail" xml:space="preserve">
    <value>&amp;Details...</value>
  </data>
  <data name="GenerateSignCheckDialogInfo" xml:space="preserve">
    <value>Scan the QR code below with your smartphone to set an authentication cookie for the sign check. You may also clock the link to set an authentication cookie on your computer.
Every time you generate a new sign check cookie the old will be disabled.</value>
  </data>
  <data name="GenerateSignCheckDialogTitle" xml:space="preserve">
    <value>Generate Sign Check</value>
  </data>
  <data name="SigningRequestDocumentDontSend" xml:space="preserve">
    <value>You do not need to send this form to the certificate authority.</value>
  </data>
  <data name="SigningRequestDocumentInfo" xml:space="preserve">
    <value>When you have collected the three signatures from the authorities and signed the form yourself, it must be sent to the certificate authority.</value>
  </data>
  <data name="SigningRequestDocumentLeave" xml:space="preserve">
    <value>The information below this line is for processing by the certificate authority. Please leave it blank.</value>
  </data>
  <data name="SigningRequestDocumentPpsAddress1" xml:space="preserve">
    <value>Piratenpartei Schweiz</value>
  </data>
  <data name="SigningRequestDocumentPpsAddress2" xml:space="preserve">
    <value>CH-1337 Vallorbe</value>
  </data>
  <data name="SigningRequestDocumentSendTo" xml:space="preserve">
    <value>Send to:</value>
  </data>
  <data name="UnlockActionGenerateSignCheck" xml:space="preserve">
    <value>Generate a sign check</value>
  </data>
  <data name="GenerateSignCheckDialogSecret" xml:space="preserve">
    <value>You must keep this QR code and the link secret.</value>
  </data>
  <data name="SigningRequestDocumentAccepted" xml:space="preserve">
    <value>□ Accepted, valid until __________________________</value>
  </data>
  <data name="SigningRequestDocumentCertificateId" xml:space="preserve">
    <value>Identifier:</value>
  </data>
  <data name="SigningRequestDocumentCertificateType" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="SigningRequestDocumentEmailAddress" xml:space="preserve">
    <value>Email address:</value>
  </data>
  <data name="SigningRequestDocumentFamilyName" xml:space="preserve">
    <value>Family name:</value>
  </data>
  <data name="SigningRequestDocumentFirstName" xml:space="preserve">
    <value>First name:</value>
  </data>
  <data name="SigningRequestDocumentGroup" xml:space="preserve">
    <value>Group:</value>
  </data>
  <data name="SigningRequestDocumentHeaderLeft" xml:space="preserve">
    <value>π-Vote</value>
  </data>
  <data name="SigningRequestDocumentHeaderRight" xml:space="preserve">
    <value>Pirate Party Switzerland</value>
  </data>
  <data name="SigningRequestDocumentParent" xml:space="preserve">
    <value>Based on certificate</value>
  </data>
  <data name="SigningRequestDocumentRefusedFingerprintMismatch" xml:space="preserve">
    <value>□ Refused, fingerprint does not match</value>
  </data>
  <data name="SigningRequestDocumentRefusedForgotten" xml:space="preserve">
    <value>□ Refused, passphrase forgotten</value>
  </data>
  <data name="SigningRequestDocumentRefusedHasCertificate" xml:space="preserve">
    <value>□ Refused, already has valid certificate</value>
  </data>
  <data name="SigningRequestDocumentRefusedLost" xml:space="preserve">
    <value>□ Refused, presumed lost</value>
  </data>
  <data name="SigningRequestDocumentRefusedNoMember" xml:space="preserve">
    <value>□ Refused, no member in group</value>
  </data>
  <data name="SigningRequestDocumentRefusedNotFx" xml:space="preserve">
    <value>□ Refused, not in office</value>
  </data>
  <data name="SigningRequestDocumentRefusedSignatureInvalid" xml:space="preserve">
    <value>□ Refused, signature invalid</value>
  </data>
  <data name="SigningRequestDocumentRequest" xml:space="preserve">
    <value>Request for certificate signing</value>
  </data>
  <data name="SigningRequestDocumentRequestKey" xml:space="preserve">
    <value>Request key:</value>
  </data>
  <data name="SigningRequestDocumentRevokedError" xml:space="preserve">
    <value>□ Revoked, validated by error</value>
  </data>
  <data name="SigningRequestDocumentRevokedForgotten" xml:space="preserve">
    <value>□ Revoked, passphrase forgotten</value>
  </data>
  <data name="SigningRequestDocumentRevokedLost" xml:space="preserve">
    <value>□ Revoked, presumed lost</value>
  </data>
  <data name="SigningRequestDocumentRevokedNoLonger" xml:space="preserve">
    <value>□ Revoked, no longer member</value>
  </data>
  <data name="SigningRequestDocumentRevokedNoMoreFx" xml:space="preserve">
    <value>□ Revoked, no longer in office</value>
  </data>
  <data name="SigningRequestDocumentRevokedStolen" xml:space="preserve">
    <value>□ Revoked, presumed stolen</value>
  </data>
  <data name="SigningRequestDocumentSignCA" xml:space="preserve">
    <value>Certificate Authority</value>
  </data>
  <data name="SigningRequestDocumentSignDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="SigningRequestDocumentSignFirstAuthority" xml:space="preserve">
    <value>First Authority</value>
  </data>
  <data name="SigningRequestDocumentSignRequester" xml:space="preserve">
    <value>Requester</value>
  </data>
  <data name="SigningRequestDocumentSignSecondAuthority" xml:space="preserve">
    <value>Second Authority</value>
  </data>
  <data name="SigningRequestDocumentSignSignature" xml:space="preserve">
    <value>Signature</value>
  </data>
  <data name="SigningRequestDocumentSignThirdAuthority" xml:space="preserve">
    <value>Third Authority</value>
  </data>
  <data name="SaveDocumentDialogTitle" xml:space="preserve">
    <value>Save Request Document</value>
  </data>
  <data name="SigningRequestDocumentFingerprint" xml:space="preserve">
    <value>Fingerprint</value>
  </data>
</root>